"use client";
import { useState } from "react";
import { useRouter } from "next/navigation";
import Image from "next/image";
import { Button } from "@/components/ui/button";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faEye, faEyeSlash } from "@fortawesome/free-solid-svg-icons";
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { signIn } from "next-auth/react";

const LoginPage = () => {
  const router = useRouter();
  const [phone, setPhone] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [loading, setLoading] = useState(false);
  const [progressVisible, setProgressVisible] = useState(false); // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á Progress Bar
  const [showRegister, setShowRegister] = useState(false);
  const [isRegistered, setIsRegistered] = useState(false);
  const [isShop, setIsShop] = useState(false);
  

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
  
    try {
      console.log("üîë ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...");
      const result = await signIn("credentials", {
        redirect: false,
        phone: phone,
        password: password,
      });
  
      console.log("üîë ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô:", result);
  
      if (!result?.ok) {
        throw new Error(result?.error || "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      }
  
      const res = await fetch("/api/auth/session");
      const session = await res.json();
  
      console.log("üîë ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• session ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", session);
  
      if (!session?.user) {
        throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ");
      }
  
      // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Token ‡∏•‡∏á localStorage
      localStorage.setItem("token", session.accessToken);
      console.log("‚úÖ Token ‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á localStorage:", session.accessToken);
  
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const checkShop = async (phoneNumber: string) => {
        const response = await fetch(`/api/checkShop?phone=${phoneNumber}`);
        const data = await response.json();
        setIsShop(data.isShop);
        console.log("üîë ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡∏∑‡∏≠: ", data.isShop);
      };
  
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
      const checkRegistration = async (phoneNumber: string) => {
        const response = await fetch(`/api/checkUser?phone=${phoneNumber}`);
        const data = await response.json();
        setIsRegistered(data.exists);
        console.log("üîë ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: ", data.exists);
      };
  
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå
      if (phone) {
        await checkShop(phone);
        await checkRegistration(phone);
      }
  
      // ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏´‡∏°‡∏∏‡∏ô‡∏Å‡πà‡∏≠‡∏ô 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      setTimeout(() => {
        setProgressVisible(true); // ‡πÅ‡∏™‡∏î‡∏á Progress Bar
        console.log("üîë ‡πÅ‡∏™‡∏î‡∏á Progress Bar");
      }, 2000);
  
      // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏Æ‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      setTimeout(() => {
        if (session.user.role === "shop") {
          console.log("üîë ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Dashboard ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô");
          router.push("/restaurant/dashboard");
        } else {
          console.log("üîë ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Home");
          router.push("/home");
        }
      }, 4500);
    } catch (error: any) {
      toast.error(error.message);
      console.error("üîë ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô: ", error);
    } finally {
      setLoading(false);
    }
  };
  

  return (
    <div className="flex flex-col items-center min-h-screen bg-white">
      <ToastContainer position="top-center" autoClose={2500} />

      {loading && (
        <div className="fixed inset-0 flex flex-col items-center justify-center bg-white bg-opacity-90 z-50">
          <div className="w-16 h-16 border-4 border-yellow-400 border-t-transparent rounded-full animate-spin"></div>
          <p className="mt-2 text-yellow-600 font-medium">
            ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...
          </p>
        </div>
      )}

      {progressVisible && (
        <div className="loading-bar">
          <div className="loading-bar-animation"></div>
        </div>
      )}

      <div className="w-full h-[40vh] bg-yellow-400 flex justify-center items-center">
        <Image
          src="/images/logofoodd.png"
          alt="Logo"
          width={180}
          height={180}
        />
      </div>

      <div className="w-[90%] max-w-md bg-white rounded-2xl shadow-lg p-8 mt-[-40px] relative">
        <form onSubmit={handleLogin}>
          <div className="mb-4">
            <label className="text-yellow-400 font-medium">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
            <input
              type="tel"
              placeholder="‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
              value={phone}
              onChange={(e) => setPhone(e.target.value)}
              className="w-full px-4 py-2 border-b-2 border-red-600 outline-none"
              required
            />
          </div>

          <div className="mb-4 relative">
            <label className="text-yellow-400 font-medium">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
            <div className="relative">
              <input
                type={showPassword ? "text" : "password"}
                placeholder="‡∏õ‡πâ‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="w-full px-4 py-2 border-b-2 border-red-600 outline-none"
                required
              />
              <FontAwesomeIcon
                icon={showPassword ? faEyeSlash : faEye}
                className="absolute right-3 top-3 cursor-pointer"
                onClick={() => setShowPassword(!showPassword)}
              />
            </div>
          </div>

          <Button
            type="submit"
            className="w-full bg-yellow-100 py-2 rounded-lg shadow-lg hover:bg-yellow-600 transition"
            disabled={loading}
          >
            {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..." : "‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ"}
          </Button>
          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô */}
          {!isShop && !isRegistered && (
            <Button
              className="w-full border-2 !border-yellow-400 text-gray-600 bg-white py-2 rounded-lg font-medium shadow-md hover:bg-yellow-100 transition mt-6"
              onClick={() => router.push("/register")}
            >
              ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
            </Button>
          )}
        </form>
      </div>
    </div>
  );
};

export default LoginPage;
