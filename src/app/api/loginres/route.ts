import { NextResponse } from "next/server";
import connection from "@/lib/db";
import jwt from "jsonwebtoken";
import bcrypt from "bcrypt";
import { RowDataPacket } from "mysql2";

interface Shop extends RowDataPacket {
  shop_id: number;
  shop_name: string;
  phone_number: string;
  password: string;
  shop_image: string;
  cate_id: number;
}

const JWT_SECRET = process.env.JWT_SECRET;
if (!JWT_SECRET) {
  throw new Error("JWT_SECRET is not defined");
}

export async function POST(req: Request) {
  try {
    const { phone_number, password }: { phone_number: string; password: string } = await req.json();

    if (!phone_number || !password) {
      return NextResponse.json({ error: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" }, { status: 400 });
    }

    if (!connection) {
      return NextResponse.json({ error: "Database connection failed" }, { status: 500 });
    }

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const query = "SELECT * FROM shops WHERE phone_number = ?";
    const [results]: [Shop[], any] = await connection.query(query, [phone_number]);

    if (results.length === 0) {
      return NextResponse.json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ô‡∏µ‡πâ" }, { status: 404 });
    }

    const shop = results[0];

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
    const isPasswordCorrect = await bcrypt.compare(password, shop.password);
    if (!isPasswordCorrect) {
      return NextResponse.json({ error: "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" }, { status: 401 });
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
    const token = jwt.sign(
      {
        shop_id: shop.shop_id,
        shop_name: shop.shop_name,
        phone_number: shop.phone_number,
        shop_image: shop.shop_image,
        cate_id: shop.cate_id,
        role: "shop", // üîπ ‡πÉ‡∏™‡πà role ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
      },
      JWT_SECRET as string,
      { expiresIn: "10h" }
    );

    return NextResponse.json(
      {
        message: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        shop: {
          shop_id: shop.shop_id,
          shop_name: shop.shop_name,
          phone_number: shop.phone_number,
          shop_image: shop.shop_image,
          cate_id: shop.cate_id,
        },
        token,
      },
      { status: 200 }
    );
  } catch (error: any) {
    console.error("Error in /api/loginres:", error);
    return NextResponse.json({ error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message }, { status: 500 });
  }
}
