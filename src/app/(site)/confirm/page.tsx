//app/(site)/confirm

"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import Swal from "sweetalert2"; // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ SweetAlert2
import Image from "next/image";
import { useUser } from "../../components/Usercontext"; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô path ‡∏ï‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á
import { useCart } from "../../components/CartContext";

import { QrCode } from "lucide-react";

interface CartItem {
  cart_id: string;
  item_id: string;
  menu_name: string;
  price: number;
  quantity: number;
  shop_id: string;
  menu_image: string;
  shop_name: string;  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° shop_name
  item_name?: string;
  options?: OptionSelection[]; // ‚úÖ ‡πÉ‡∏ä‡πâ options ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
}

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó OptionSelection ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ group_id ‡πÄ‡∏õ‡πá‡∏ô number
interface OptionSelection {
  option_name: string;
  group_id: number; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏õ‡πá‡∏ô number
  selected_items: string[];
}

const ConfirmationPage = () => {
  const router = useRouter();
  const [orderStatus, setOrderStatus] = useState<string | null>(null);
  const [userName, setUserName] = useState<string | null>(null);

  const [shopId, setShopId] = useState<string | null>(null);
  const [phone, setPhone] = useState<string | null>(null);
  const [deliveryType, setDeliveryType] = useState(""); // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
  const { user } = useUser(); // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user
  const [outOfStockAction, setOutOfStockAction] = useState(""); // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á

  const [paymentMethod, setPaymentMethod] = useState(""); // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
  const { cartItems, setCartItems } = useCart(); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° setCartItems ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
const shopName = cartItems.length > 0 ? cartItems[0].shop_name : "";

  const shopIdFromCart = cartItems.length > 0 ? cartItems[0].shop_id : null;

  const isOrderValid =
    cartItems.length > 0 &&
    deliveryType !== "" &&
    paymentMethod !== "" &&
    outOfStockAction !== "";

  console.log("üõí Cart Items:", cartItems);
  console.log("‚úÖ isOrderValid:", isOrderValid);

  const showConfirmAlert = () => {
    Swal.fire({
      title: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô",
      cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      reverseButtons: false,
      width: "300px",
    }).then((result) => {
      if (result.isConfirmed) {
        handleSubmitOrder();
      } else if (result.dismiss === Swal.DismissReason.cancel) {
        Swal.fire({
          title: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
          text: "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å :)",
          icon: "error",
        });
      }
    });
  };

  interface OptionSelection {
    option_name: string;
    group_id: number;
    selected_items: number[]; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô number[]
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
  const handleOptionChange = (option: OptionSelection, cartId: string) => {
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    const updatedCart = cartItems.map((item) => {
      if (item.cart_id === cartId) {
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• options
        item.options = [...(item.options || []), option];
      }
      return item;
    });

    setCartItems(updatedCart);

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏á‡πÉ‡∏ô localStorage
    localStorage.setItem("cartItems", JSON.stringify(updatedCart));
  };

  useEffect(() => {
    const storedUserName = localStorage.getItem("userName");
    const storedPhone = localStorage.getItem("phoneNumber");
    if (storedUserName) setUserName(storedUserName);
    if (storedPhone) setPhone(storedPhone);
    console.log("üë§ User Name:", storedUserName);
    console.log("üìû Phone:", storedPhone);
  }, []);

  useEffect(() => {
    if (!shopId && cartItems.length > 0) {
      setShopId(cartItems[0].shop_id);
      console.log("üè™ Shop ID set:", cartItems[0].shop_id);
    }
  }, [cartItems, shopId]);

  useEffect(() => {
    if (orderStatus) {
      console.log("üì¶ Order Status Updated:", orderStatus);
      Swal.fire({
        title: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
        text: `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${orderStatus}`,
        icon:
          orderStatus.includes("‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß") || orderStatus.includes("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")
            ? "error"
            : "success",
      });
    }
  }, [orderStatus]); // ‚úÖ Syntax ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß

 
  const handleSubmitOrder = () => {
    console.log("üìù Checking required fields before sending order...");
    
    // ‡∏î‡∏∂‡∏á Token ‡∏à‡∏≤‡∏Å localStorage
    const token = localStorage.getItem("token");
    if (!token) {
      Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", "error");
      return;
    }
  
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!cartItems || cartItems.length === 0) {
      Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤", "error");
      return;
    }
  
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡πà‡∏≤‡∏á‡πÜ
    if (deliveryType === "" || paymentMethod === "" || outOfStockAction === "") {
      Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å", "error");
      return;
    }
    // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô)
    const shopName = cartItems.length > 0 ? cartItems[0].shop_name : "";

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì totalAmount
    const totalAmount = cartItems.reduce((total, item) => total + item.price, 0);
  
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ (‡∏™‡πà‡∏á‡πÅ‡∏Ñ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ QR)
    const orderData = {
      customer_name: userName,
      customer_phone: phone,
      shop_id: shopId,
      deliveryType, // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ
      paymentMethod, // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ
      out_of_stock_action: outOfStockAction, // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ
      items: cartItems.map((item) => ({
        cart_id: item.cart_id,
        item_id: item.item_id,
        
        menu_name: item.menu_name,
        menu_image: item.menu_image,
        price: item.price,
        quantity: item.quantity,
        shop_id: item.shop_id,
        note: item.note || "",
        options: item.options || [],
      })),
      totalAmount,
    };
  
    console.log("üì§ Sending Order Data:", orderData);
  
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ QR
    const qrUrl = `/qr?shop_id=${shopId}&shop_name=${encodeURIComponent(shopName)}&amount=${totalAmount}&orderId=${Math.random().toString(36).substring(7)}&deliveryType=${deliveryType}&paymentMethod=${paymentMethod}&outOfStockAction=${outOfStockAction}`;
  
    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ QR
    router.push(qrUrl);
  
    Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß", "success");
  };
  
  

  
  const handleRemoveItem = (cartId: string) => {
    if (!cartItems) return;

    const updatedCart = cartItems.filter((item) => item.cart_id !== cartId);
    setCartItems(updatedCart);

    if (updatedCart.length === 0) {
      router.push("/home");
    }
  };

  return (
    <div className="container mx-auto p-4 bg-gray-50 min-h-screen">
      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
      {cartItems.length > 0 && (
        <button
          className="fixed top-3 left-3 bg-white p-2 rounded-full shadow-md hover:bg-gray-100 transition"
          onClick={() => router.back()} // ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            strokeWidth={2}
            stroke="currentColor"
            className="w-6 h-6 text-gray-700"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              d="M15 19l-7-7 7-7"
            />
          </svg>
        </button>
      )}
      <div className="p-4 bg-white rounded-lg shadow-md flex justify-between items-center">
        <h2 className="text-lg font-semibold">‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h2>
        <button
          className="border-2 border-black text-black text-sm font-semibold px-4 py-1 rounded-full bg-white"
          onClick={() => router.push(shopId ? `/menus/${shopId}` : "/home")}
        >
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        </button>
      </div>

      {cartItems.length > 0 ? (
        <div className="divide-y divide-gray-300">
          {cartItems.map((item) => (
            <div key={item.item_id} className="flex items-start gap-4 py-4">
              <div className="flex items-end gap-2">
                <div className="w-20 h-20">
                  <Image
                    src={item.menu_image} // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å image_url
                    alt={item.menu_name} // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å product_name
                    width={80}
                    height={80}
                    className="rounded-lg object-cover w-full h-full"
                  />
                </div>
                <span className="text-xs bg-gray-200 text-black px-2 py-0.5 rounded">
                  x{item.quantity}
                </span>
              </div>

              <div className="flex-1">
                <p className="font-normal">{item.menu_name}</p>

                {/* ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ */}
                {item.note && (
                  <p className="text-sm text-red-500">* {item.note}</p>
                )}
              </div>

              {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç  */}
              <div className="flex justify-end gap-2 mt-1">
                <button
                  className="bg-yellow-500 text-white px-3 py-1 rounded text-sm"
                  onClick={() =>
                    router.push(
                      `/detail?menu_id=${
                        item.item_id
                      }&menu_name=${encodeURIComponent(
                        item.menu_name
                      )}&quantity=${item.quantity}&note=${encodeURIComponent(
                        item.note || ""
                      )}`
                    )
                  }
                >
                  ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                </button>

                {/* ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö */}
                <button
                  className="bg-red-500 text-white px-3 py-1 rounded text-sm"
                  onClick={() => handleRemoveItem(item.cart_id)}
                >
                  ‡∏•‡∏ö
                </button>
              </div>

              <p className="font-semibold">‡∏ø{item.price}</p>
            </div>
          ))}
        </div>
      ) : (
        <p className="text-center py-4">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</p>
      )}

      <div className="border-t pt-4 mt-4">
        <div className="flex justify-between text-md font-semibold">
          <span>‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏≠‡∏≤‡∏´‡∏≤‡∏£</span>
          <span>
            ‡∏ø{cartItems.reduce((total, item) => total + item.price, 0)}
          </span>
        </div>
        <div className="flex justify-between text-lg font-semibold border-t pt-4 mt-2">
          <span>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
          <span>
            ‡∏ø{cartItems.reduce((total, item) => total + item.price, 0)}
          </span>
        </div>
      </div>

      {/* UI ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£ */}
      <div className="mt-6 p-4 bg-white rounded-lg shadow-md">
        <h3 className="text-md font-semibold">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£</h3>
        <div
          className="mt-2 flex items-center gap-2 p-3 cursor-pointer"
          onClick={() => setDeliveryType("‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô")}
        >
          <div
            className={`w-5 h-5 border-2 rounded-full flex items-center justify-center 
              ${
                deliveryType === "‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô"
                  ? "border-yellow-500"
                  : "border-gray-300"
              }`}
          >
            {deliveryType === "‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô" && (
              <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
            )}
          </div>
          <span>‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô</span>
        </div>
      </div>

      {/* UI ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
      <div className="mt-4 p-4 bg-white rounded-lg shadow-md">
        <h3 className="text-md font-semibold">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h3>
        <div
          className="mt-2 flex items-center gap-2 p-3 cursor-pointer"
          onClick={() => setPaymentMethod("‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î")}
        >
          <div
            className={`w-5 h-5 border-2 rounded-full flex items-center justify-center 
              ${
                paymentMethod === "‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î"
                  ? "border-yellow-500"
                  : "border-gray-300"
              }`}
          >
            {paymentMethod === "‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î" && (
              <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
            )}
          </div>
          <span className="flex items-center gap-2">
            <QrCode className="w-5 h-5 text-gray-600" />
            ‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î
          </span>
        </div>
      </div>
      {/* ‡∏ß‡∏¥‡∏ò‡∏µ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏ì‡∏µ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏î */}
      <div className="mt-4 p-4 bg-white rounded-lg shadow-md">
        <h3 className="text-md font-semibold">‡∏ß‡∏¥‡∏ò‡∏µ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏ì‡∏µ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏î</h3>
        <select
  className="mt-2 p-2 border rounded w-full"
  value={outOfStockAction}
  onChange={(e) => {
    setOutOfStockAction(e.target.value);
    console.log("üõë out_of_stock_action updated:", e.target.value);
  }}
>
  <option value="" disabled hidden>
    ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  </option>
  <option value="‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ó‡∏ô">
    ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ó‡∏ô
  </option>
  <option value="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏´‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏î">
    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏´‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏î
  </option>
</select>

      </div>

      <div className="fixed bottom-0 left-0 w-full bg-white shadow-md p-4">
        <button
          className={`w-full py-3 rounded-lg text-lg ${
            isOrderValid
              ? "bg-yellow-500 text-white"
              : "bg-gray-300 text-gray-500 cursor-not-allowed"
          }`}
          onClick={showConfirmAlert} // ‚¨ÖÔ∏è ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å SweetAlert ‡∏Å‡πà‡∏≠‡∏ô
          disabled={!isOrderValid}
        >
          ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
        </button>
        ;
      </div>
    </div>
  );
};

export default ConfirmationPage;
