// app/components/ui/SweetAlert.tsx
import { useEffect } from "react";
import Swal from "sweetalert2";

interface SweetAlertProps {
  orderStatus: string; // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å props ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  onConfirm: () => void;
}

const SweetAlert: React.FC<SweetAlertProps> = ({ orderStatus, onConfirm }) => {
  useEffect(() => {
    if (orderStatus === "‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß") {
      Swal.fire({
        title: "<h3 style='font-size: 18px; font-weight: bold;'>‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß üéâ</h3>",
        html: "<p style='font-size: 14px;'>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏°‡∏≤‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!</p>",
        icon: "success",
        confirmButtonText: "‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö",
        confirmButtonColor: "#facc15",
        width: "350px", // ‚úÖ ‡πÉ‡∏ä‡πâ‡πÅ‡∏Ñ‡πà width
        customClass: {
          popup: "custom-alert-popup",
          confirmButton: "custom-confirm-button",
        },
      }).then(() => {
        onConfirm();
      }); // ‚úÖ ‡∏õ‡∏¥‡∏î‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    }
  }, [orderStatus, onConfirm]);

  const showConfirmAlert = () => {
    Swal.fire({
      title: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô",
      cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      reverseButtons: false,
    }).then((result) => {
      if (result.isConfirmed) {
        handleOrderSubmission();
      } else if (result.dismiss === Swal.DismissReason.cancel) {
        Swal.fire({
          title: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
          text: "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å :)",
          icon: "error",
        });
      }
    });
  };

  
  const handleOrderSubmission = () => {
    let timerInterval: ReturnType<typeof setInterval>;
  
    Swal.fire({
      title: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠!",
      html: "‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠ <b></b> ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...",
      timer: 3000, // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      timerProgressBar: true,
      didOpen: () => {
        const popup = Swal.getPopup();
        if (popup) {
          const confirmButton = Swal.getConfirmButton();
          if (confirmButton) {
            Swal.showLoading(confirmButton); // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
          }
  
          const timer = popup.querySelector("b");
          if (timer) {
            timerInterval = setInterval(() => {
              const timerLeft = Swal.getTimerLeft();
              if (timerLeft !== undefined) {
                timer.textContent = `${Math.ceil(timerLeft / 1000)}`;
              }
            }, 100);
          }
        }
      },
      willClose: () => {
        clearInterval(timerInterval);
      },
    }).then((result) => {
      if (result.dismiss === Swal.DismissReason.timer) {
        onConfirm(); // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      }
    });
  };
  

  return null; // ‚úÖ ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡πÑ‡∏°‡πà‡∏°‡∏µ UI ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡πÅ‡∏Ñ‡πà‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
};

export default SweetAlert;
